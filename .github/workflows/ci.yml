name: WebdriverIO Tests and Allure Report Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run WebdriverIO tests in Chrome (Headless)
        run: |
          # Set the DISPLAY environment variable for headless Chrome
          export DISPLAY=:99
          Xvfb :99 -ac &
          # Run tests
          npm run wdio
          
      - name: Generate Allure report
        if: always()
        run: |
          if [ -d "allure-results" ]; then
            npm run allure:generate
          else
            echo "allure-results directory not found"
            exit 1
          fi

      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure-report
          path: allure-report

      - name: Deploy Allure Report to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Check out the gh-pages branch
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git worktree add gh-pages gh-pages
          cd gh-pages
          
          # Clear the gh-pages branch content
          rm -rf ./*
          
          # Copy the Allure report to the gh-pages branch
          cp -R ../allure-report/* .
          
          # Commit and push the report to the gh-pages branch
          git add .
          git commit -m "Update Allure report"
          git push origin gh-pages

  docker-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t webdriverio-tests .

      - name: Run WebdriverIO tests in Docker
        run: |
          docker run --rm webdriverio-tests
